/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.44
 * Generated at: 2017-06-06 07:28:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.xinan;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.net.URLDecoder;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.net.URLDecoder");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("  \r\n");
      out.write("  \r\n");

String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";
String name="";  
String psw="";  
String checked="";  
Cookie[] cookies=request.getCookies();  
if(cookies!=null&&cookies.length>0){   
    //遍历Cookie  
    for(int i=0;i<cookies.length;i++){  
        Cookie cookie=cookies[i];  
        //此处类似与Map有name和value两个字段,name相等才赋值,并处理编码问题   
        if("name".equals(cookie.getName())){  
            name=URLDecoder.decode(cookie.getValue(),"utf-8");  
            //将"记住我"设置为勾选   
            checked="checked";  
        }  
        if("psw".equals(cookie.getName())){  
            psw=cookie.getValue();  
        }  
    }  
}  

      out.write("\r\n");
      out.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<meta http-equiv=\"Content-Language\" content=\"ja\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\">\r\n");
      out.write("<title>新安商事業務管理システム</title>\r\n");
      out.write("<script language=\"JavaScript\" src=\"../js/common.js?");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${initParam.version}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"../css/content.css?");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${initParam.version}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"../css/default.css?");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${initParam.version}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("<script type=\"text/javascript\" src=\"../js/jquery.min.js?");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${initParam.version}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"../js/thickbox.js?");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${initParam.version}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"../js/window.js?");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${initParam.version}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("      \r\n");
      out.write("        // 第一項目にフォーカスを移動\r\n");
      out.write("        window.onload = function() {\r\n");
      out.write("            var userAgent = navigator.userAgent;\r\n");
      out.write("            if ((userAgent.indexOf(\"Chrome\") == -1) && (userAgent.indexOf(\"Firefox\") ==-1)){\r\n");
      out.write("            \tdocument.getElementById(\"login-lead\").innerText = \"Firefoxを使ってください！\";\r\n");
      out.write("            \tdocument.getElementById(\"login\").disabled=true ;\r\n");
      out.write("            \treturn;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            var input = document.getElementsByTagName('input');\r\n");
      out.write("            for (var i = 0; i < input.length; i ++){\r\n");
      out.write("                if (input[i].type == 'text') break;\r\n");
      out.write("            }\r\n");
      out.write("            var textbox = input[i];\r\n");
      out.write("            // テキストボックスにフォーカス\r\n");
      out.write("            if (textbox) {\r\n");
      out.write("              textbox.focus();\r\n");
      out.write("              return;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            var input = document.getElementsByTagName('select');\r\n");
      out.write("            for (var i = 0; i < input.length; i ++){\r\n");
      out.write("              break;\r\n");
      out.write("            }\r\n");
      out.write("            var select = input[i];\r\n");
      out.write("            // テキストボックスにフォーカス\r\n");
      out.write("            if (select) {\r\n");
      out.write("              select.focus();\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("        }\r\n");
      out.write("        //-->\r\n");
      out.write("        </script></head>\r\n");
      out.write("        <body onkeydown=\"changeKeyCodeEntertoTab();\"><table width=\"978\" id=\"wrapper\" class=\"login\">    <tbody><tr>\r\n");
      out.write("        <td rowspan=\"3\" id=\"wrapper-left\"><img src=\"../images/spacer.gif\" alt=\"\" width=\"4\" height=\"1\"></td><td width=\"970\">        <!-- headerここから -->\r\n");
      out.write("        <div id=\"header\">\r\n");
      out.write("            <table>\r\n");
      out.write("                            <tbody><tr>\r\n");
      out.write("                                <td><a><img src=\"../images/xlog.png\" alt=\"XINAN SYSTEM\" width=\"285\" height=\"49\"></a></td>\r\n");
      out.write("                            </tr>\r\n");
      out.write("                        </tbody></table>        </div>\r\n");
      out.write("        <!-- headerここまで -->\r\n");
      out.write("        </td>\r\n");
      out.write("        <td rowspan=\"3\" id=\"wrapper-right\"><img src=\"../images/spacer.gif\" alt=\"\" width=\"4\" height=\"1\"></td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    <tr>\r\n");
      out.write("        <td id=\"container\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<p id=\"login-lead\">\r\n");
      out.write("\t\t\t\t\tログインを頂き、メニュー画面へお進み下さい。\r\n");
      out.write("                    </p>\r\n");
      out.write("\t\t\t\t\t<form action=\"xinan/login.action\" method=\"post\">\r\n");
      out.write("\t\t\t\t\t\t<div id=\"login-box\">\r\n");
      out.write("\t\t\t\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>ユーザーＩＤ</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td><input name=\"userId\" type=\"text\" maxlength=\"13\" style=\"width:86%; ime-mode:inactive\" value=\"");
      out.print(name );
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>パスワード</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td><input name=\"passWord\" type=\"password\" maxlength=\"13\" value=\"");
      out.print(psw );
      out.write("\" style=\"width:86%;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>&nbsp;</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td><input name=\"rememberMe\" type=\"checkbox\" checked=\"checked\" style=\"width:20px;\">ログイン情報保持</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t</tbody></table>\r\n");
      out.write("\t\t\t\t\t\t\t<p><input  id=\"login\" name=\"login\" type=\"submit\" src=\"../images/btn_login.jpg\" alt=\"ログイン\"></p>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    <tr>\r\n");
      out.write("        <td>\r\n");
      out.write("        <!-- footerここから -->\r\n");
      out.write("        <div id=\"footer\">\r\n");
      out.write("            <p></p>\r\n");
      out.write("        </div>\r\n");
      out.write("        <!-- footerここまで -->\r\n");
      out.write("        </td>\r\n");
      out.write("    </tr>\r\n");
      out.write("</tbody></table>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body></html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
